{"ast":null,"code":"import React,{useState}from'react';import{mockPromptQLResponse}from'../utils/helpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatBot=_ref=>{let{isOpen,onToggle}=_ref;const[messages,setMessages]=useState([{id:'1',type:'assistant',message:'Hello! I\\'m your Instamart Ops Co-Pilot. How can I help you today?',timestamp:new Date()}]);const[inputMessage,setInputMessage]=useState('');const handleSendMessage=()=>{if(!inputMessage.trim())return;const userMessage={id:Date.now().toString(),type:'user',message:inputMessage,timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);setInputMessage('');// Simulate AI response\nsetTimeout(()=>{const aiResponse={id:(Date.now()+1).toString(),type:'assistant',message:mockPromptQLResponse(inputMessage),timestamp:new Date()};setMessages(prev=>[...prev,aiResponse]);},1000);};const handleKeyPress=e=>{if(e.key==='Enter'){handleSendMessage();}};if(!isOpen){return/*#__PURE__*/_jsx(\"button\",{onClick:onToggle,className:\"fixed bottom-6 right-6 w-14 h-14 bg-instamart-blue text-white rounded-full shadow-lg hover:shadow-xl transition-shadow duration-200 flex items-center justify-center text-2xl z-50\",children:\"\\uD83D\\uDCAC\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed bottom-6 right-6 w-80 h-96 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 flex flex-col z-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-instamart-blue text-white p-4 rounded-t-lg flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold\",children:\"Ops Co-Pilot\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onToggle,className:\"text-white hover:text-gray-200 transition-colors\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-3\",children:messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.type==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsx(\"div\",{className:`max-w-xs px-3 py-2 rounded-lg text-sm ${message.type==='user'?'bg-instamart-blue text-white':'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200'}`,children:message.message})},message.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Ask me anything...\",className:\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-instamart-blue focus:border-transparent\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,className:\"px-4 py-2 bg-instamart-blue text-white rounded-lg hover:bg-blue-600 transition-colors\",children:\"Send\"})]})})]});};export default ChatBot;","map":{"version":3,"names":["React","useState","mockPromptQLResponse","jsx","_jsx","jsxs","_jsxs","ChatBot","_ref","isOpen","onToggle","messages","setMessages","id","type","message","timestamp","Date","inputMessage","setInputMessage","handleSendMessage","trim","userMessage","now","toString","prev","setTimeout","aiResponse","handleKeyPress","e","key","onClick","className","children","map","value","onChange","target","onKeyPress","placeholder"],"sources":["C:/Users/scar/Downloads/cursor/src/components/ChatBot.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ChatMessage } from '../types';\r\nimport { mockPromptQLResponse } from '../utils/helpers';\r\n\r\ninterface ChatBotProps {\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nconst ChatBot: React.FC<ChatBotProps> = ({ isOpen, onToggle }) => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([\r\n    {\r\n      id: '1',\r\n      type: 'assistant',\r\n      message: 'Hello! I\\'m your Instamart Ops Co-Pilot. How can I help you today?',\r\n      timestamp: new Date(),\r\n    },\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      message: inputMessage,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n\r\n    // Simulate AI response\r\n    setTimeout(() => {\r\n      const aiResponse: ChatMessage = {\r\n        id: (Date.now() + 1).toString(),\r\n        type: 'assistant',\r\n        message: mockPromptQLResponse(inputMessage),\r\n        timestamp: new Date(),\r\n      };\r\n      setMessages(prev => [...prev, aiResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"fixed bottom-6 right-6 w-14 h-14 bg-instamart-blue text-white rounded-full shadow-lg hover:shadow-xl transition-shadow duration-200 flex items-center justify-center text-2xl z-50\"\r\n      >\r\n        ðŸ’¬\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-6 right-6 w-80 h-96 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 flex flex-col z-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-instamart-blue text-white p-4 rounded-t-lg flex items-center justify-between\">\r\n        <h3 className=\"font-semibold\">Ops Co-Pilot</h3>\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"text-white hover:text-gray-200 transition-colors\"\r\n        >\r\n          âœ•\r\n        </button>\r\n      </div>\r\n\r\n      {/* Messages */}\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\r\n        {messages.map((message) => (\r\n          <div\r\n            key={message.id}\r\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div\r\n              className={`max-w-xs px-3 py-2 rounded-lg text-sm ${\r\n                message.type === 'user'\r\n                  ? 'bg-instamart-blue text-white'\r\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200'\r\n              }`}\r\n            >\r\n              {message.message}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input */}\r\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask me anything...\"\r\n            className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-instamart-blue focus:border-transparent\"\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"px-4 py-2 bg-instamart-blue text-white rounded-lg hover:bg-blue-600 transition-colors\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}