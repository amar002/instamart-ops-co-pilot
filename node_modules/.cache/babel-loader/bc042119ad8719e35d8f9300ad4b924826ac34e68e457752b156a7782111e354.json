{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scar\\\\Downloads\\\\cursor\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CityCard from '../components/CityCard';\nimport ChatBot from '../components/ChatBot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [pods, setPods] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [chatOpen, setChatOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPods = async () => {\n      try {\n        const response = await fetch('/data/pods.json');\n        const data = await response.json();\n        setPods(data);\n        // Aggregate by city (latest date per pod)\n        const latestPods = [];\n        const podMap = new Map();\n        data.forEach(pod => {\n          const key = pod.pod_id;\n          if (!podMap.has(key) || new Date(pod.date) > new Date(podMap.get(key).date)) {\n            podMap.set(key, pod);\n          }\n        });\n        podMap.forEach(pod => latestPods.push(pod));\n        // Group by city\n        const cityMap = new Map();\n        latestPods.forEach(pod => {\n          if (!cityMap.has(pod.city)) {\n            cityMap.set(pod.city, {\n              city: pod.city,\n              cityOwnerName: pod.city_owner_name,\n              cityOwnerEmail: pod.city_owner_email,\n              o2har: 0,\n              unserviceability: 0,\n              breachedPods: 0,\n              totalPods: 0,\n              lastUpdated: pod.date\n            });\n          }\n          const city = cityMap.get(pod.city);\n          city.o2har += pod.o2har;\n          city.unserviceability += pod.unserviceability;\n          city.totalPods += 1;\n          if (pod.o2har > 9.0 || pod.unserviceability > 5.0) city.breachedPods += 1;\n          if (new Date(pod.date) > new Date(city.lastUpdated)) city.lastUpdated = pod.date;\n        });\n        // Average metrics\n        cityMap.forEach(city => {\n          city.o2har = city.o2har / city.totalPods;\n          city.unserviceability = city.unserviceability / city.totalPods;\n        });\n        setCities(Array.from(cityMap.values()));\n      } catch (error) {\n        console.error('Error fetching pods:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPods();\n  }, []);\n  const handleCityClick = city => {\n    navigate(`/city/${encodeURIComponent(city)}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-instamart-blue mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading cities...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-sm border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto px-4 py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Instamart Ops Co-Pilot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"City Operations Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: cities.map(city => /*#__PURE__*/_jsxDEV(CityCard, {\n          ...city,\n          onClick: () => handleCityClick(city.city)\n        }, city.city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBot, {\n      isOpen: chatOpen,\n      onToggle: () => setChatOpen(!chatOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OeqFR67ezw8yxlvgT1V2m6nV9RM=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CityCard","ChatBot","jsxDEV","_jsxDEV","Dashboard","_s","pods","setPods","cities","setCities","loading","setLoading","chatOpen","setChatOpen","navigate","fetchPods","response","fetch","data","json","latestPods","podMap","Map","forEach","pod","key","pod_id","has","Date","date","get","set","push","cityMap","city","cityOwnerName","city_owner_name","cityOwnerEmail","city_owner_email","o2har","unserviceability","breachedPods","totalPods","lastUpdated","Array","from","values","error","console","handleCityClick","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","isOpen","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/scar/Downloads/cursor/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PodData } from '../types';\r\nimport CityCard from '../components/CityCard';\r\nimport ChatBot from '../components/ChatBot';\r\n\r\ninterface CitySummary {\r\n  city: string;\r\n  cityOwnerName: string;\r\n  cityOwnerEmail: string;\r\n  o2har: number;\r\n  unserviceability: number;\r\n  breachedPods: number;\r\n  totalPods: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [pods, setPods] = useState<PodData[]>([]);\r\n  const [cities, setCities] = useState<CitySummary[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPods = async () => {\r\n      try {\r\n        const response = await fetch('/data/pods.json');\r\n        const data: PodData[] = await response.json();\r\n        setPods(data);\r\n        // Aggregate by city (latest date per pod)\r\n        const latestPods: PodData[] = [];\r\n        const podMap = new Map<string, PodData>();\r\n        data.forEach(pod => {\r\n          const key = pod.pod_id;\r\n          if (!podMap.has(key) || new Date(pod.date) > new Date(podMap.get(key)!.date)) {\r\n            podMap.set(key, pod);\r\n          }\r\n        });\r\n        podMap.forEach(pod => latestPods.push(pod));\r\n        // Group by city\r\n        const cityMap = new Map<string, CitySummary>();\r\n        latestPods.forEach(pod => {\r\n          if (!cityMap.has(pod.city)) {\r\n            cityMap.set(pod.city, {\r\n              city: pod.city,\r\n              cityOwnerName: pod.city_owner_name,\r\n              cityOwnerEmail: pod.city_owner_email,\r\n              o2har: 0,\r\n              unserviceability: 0,\r\n              breachedPods: 0,\r\n              totalPods: 0,\r\n              lastUpdated: pod.date,\r\n            });\r\n          }\r\n          const city = cityMap.get(pod.city)!;\r\n          city.o2har += pod.o2har;\r\n          city.unserviceability += pod.unserviceability;\r\n          city.totalPods += 1;\r\n          if (pod.o2har > 9.0 || pod.unserviceability > 5.0) city.breachedPods += 1;\r\n          if (new Date(pod.date) > new Date(city.lastUpdated)) city.lastUpdated = pod.date;\r\n        });\r\n        // Average metrics\r\n        cityMap.forEach(city => {\r\n          city.o2har = city.o2har / city.totalPods;\r\n          city.unserviceability = city.unserviceability / city.totalPods;\r\n        });\r\n        setCities(Array.from(cityMap.values()));\r\n      } catch (error) {\r\n        console.error('Error fetching pods:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPods();\r\n  }, []);\r\n\r\n  const handleCityClick = (city: string) => {\r\n    navigate(`/city/${encodeURIComponent(city)}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-instamart-blue mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading cities...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"max-w-4xl mx-auto px-4 py-4\">\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Instamart Ops Co-Pilot</h1>\r\n          <p className=\"text-sm text-gray-600\">City Operations Overview</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* City Cards */}\r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {cities.map(city => (\r\n            <CityCard\r\n              key={city.city}\r\n              {...city}\r\n              onClick={() => handleCityClick(city.city)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ChatBot */}\r\n      <ChatBot isOpen={chatOpen} onToggle={() => setChatOpen(!chatOpen)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}