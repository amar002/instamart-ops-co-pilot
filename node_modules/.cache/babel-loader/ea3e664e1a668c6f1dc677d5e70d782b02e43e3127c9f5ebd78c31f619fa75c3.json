{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scar\\\\Downloads\\\\cursor\\\\src\\\\contexts\\\\DarkModeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext(undefined);\nexport const useDarkMode = () => {\n  _s();\n  const context = useContext(DarkModeContext);\n  if (context === undefined) {\n    throw new Error('useDarkMode must be used within a DarkModeProvider');\n  }\n  return context;\n};\n_s(useDarkMode, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DarkModeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (savedMode !== null) {\n      setIsDark(savedMode === 'true');\n    } else {\n      setIsDark(prefersDark);\n    }\n  }, []);\n  useEffect(() => {\n    if (isDark) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('darkMode', 'true');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('darkMode', 'false');\n    }\n  }, [isDark]);\n  const toggleDarkMode = () => {\n    setIsDark(!isDark);\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDark,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(DarkModeProvider, \"MY+3NvjXsBPnKBBvoV1wuj6EAdg=\");\n_c = DarkModeProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","DarkModeContext","undefined","useDarkMode","_s","context","Error","DarkModeProvider","children","_s2","isDark","setIsDark","savedMode","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","toggleDarkMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/scar/Downloads/cursor/src/contexts/DarkModeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\ninterface DarkModeContextType {\r\n  isDark: boolean;\r\n  toggleDarkMode: () => void;\r\n}\r\n\r\nconst DarkModeContext = createContext<DarkModeContextType | undefined>(undefined);\r\n\r\nexport const useDarkMode = () => {\r\n  const context = useContext(DarkModeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDarkMode must be used within a DarkModeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DarkModeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const DarkModeProvider: React.FC<DarkModeProviderProps> = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    \r\n    if (savedMode !== null) {\r\n      setIsDark(savedMode === 'true');\r\n    } else {\r\n      setIsDark(prefersDark);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDark) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('darkMode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('darkMode', 'false');\r\n    }\r\n  }, [isDark]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDark, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,eAAe,gBAAGN,aAAa,CAAkCO,SAAS,CAAC;AAEjF,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGT,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAYxB,OAAO,MAAMI,gBAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,IAAIN,SAAS,KAAK,IAAI,EAAE;MACtBD,SAAS,CAACC,SAAS,KAAK,MAAM,CAAC;IACjC,CAAC,MAAM;MACLD,SAAS,CAACI,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,EAAE;MACVS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CT,YAAY,CAACU,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IAC1C,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;MACjDX,YAAY,CAACU,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;IAC3C;EACF,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3Bd,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA,CAACC,eAAe,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,MAAM;MAAEe;IAAe,CAAE;IAAAjB,QAAA,EACzDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACtB,GAAA,CAjCWF,gBAAiD;AAAAyB,EAAA,GAAjDzB,gBAAiD;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}