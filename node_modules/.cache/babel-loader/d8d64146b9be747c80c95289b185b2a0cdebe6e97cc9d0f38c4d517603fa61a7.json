{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scar\\\\Downloads\\\\cursor\\\\src\\\\components\\\\MetricsChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n// @ts-ignore\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst MetricsChart = ({\n  todayMetrics,\n  yesterdayMetrics,\n  sdlwMetrics,\n  metricType\n}) => {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: '#ffffff',\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle',\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: `${metricType.toUpperCase()}${metricType === 'o2har' ? ' (Mins)' : ' (%)'} - Hourly Trend`,\n        color: '#ffffff',\n        font: {\n          size: window.innerWidth < 768 ? 14 : 16\n        },\n        padding: {\n          top: 10,\n          bottom: 20\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(26, 26, 46, 0.95)',\n        titleColor: '#ffffff',\n        bodyColor: '#ffffff',\n        borderColor: '#2d2d44',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        titleFont: {\n          size: window.innerWidth < 768 ? 11 : 13\n        },\n        bodyFont: {\n          size: window.innerWidth < 768 ? 10 : 12\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          color: '#ffffff',\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          },\n          padding: 8\n        },\n        border: {\n          color: 'rgba(255, 255, 255, 0.2)'\n        }\n      },\n      x: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)',\n          drawBorder: false\n        },\n        ticks: {\n          color: '#ffffff',\n          font: {\n            size: window.innerWidth < 768 ? 9 : 11\n          },\n          padding: 8,\n          maxRotation: window.innerWidth < 768 ? 45 : 0,\n          minRotation: window.innerWidth < 768 ? 45 : 0\n        },\n        border: {\n          color: 'rgba(255, 255, 255, 0.2)'\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    },\n    elements: {\n      point: {\n        radius: window.innerWidth < 768 ? 3 : 4,\n        hoverRadius: window.innerWidth < 768 ? 5 : 6,\n        borderWidth: 2\n      },\n      line: {\n        tension: 0.3\n      }\n    }\n  };\n  const data = {\n    labels: todayMetrics.map(m => m.hour),\n    datasets: [{\n      label: 'Today',\n      data: todayMetrics.map(m => m[metricType]),\n      borderColor: '#3b82f6',\n      backgroundColor: 'rgba(59, 130, 246, 0.2)',\n      borderWidth: 2,\n      fill: false,\n      pointBackgroundColor: '#3b82f6',\n      pointBorderColor: '#ffffff'\n    }, {\n      label: 'Yesterday',\n      data: yesterdayMetrics.map(m => m[metricType]),\n      borderColor: '#9ca3af',\n      backgroundColor: 'rgba(156, 163, 175, 0.2)',\n      borderWidth: 2,\n      borderDash: [5, 5],\n      fill: false,\n      pointBackgroundColor: '#9ca3af',\n      pointBorderColor: '#ffffff'\n    }, {\n      label: 'Same Day Last Week',\n      data: sdlwMetrics.map(m => m[metricType]),\n      borderColor: '#6b7280',\n      backgroundColor: 'rgba(107, 114, 128, 0.2)',\n      borderWidth: 2,\n      borderDash: [2, 2],\n      fill: false,\n      pointBackgroundColor: '#6b7280',\n      pointBorderColor: '#ffffff'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark-card border border-dark-border rounded-xl shadow-soft p-4 md:p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-64 md:h-80 lg:h-96\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricsChart;\nexport default MetricsChart;\nvar _c;\n$RefreshReg$(_c, \"MetricsChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","MetricsChart","todayMetrics","yesterdayMetrics","sdlwMetrics","metricType","options","responsive","maintainAspectRatio","plugins","legend","position","labels","color","padding","usePointStyle","pointStyle","font","size","window","innerWidth","title","display","text","toUpperCase","top","bottom","tooltip","backgroundColor","titleColor","bodyColor","borderColor","borderWidth","cornerRadius","displayColors","titleFont","bodyFont","scales","y","beginAtZero","grid","drawBorder","ticks","border","x","maxRotation","minRotation","interaction","intersect","mode","elements","point","radius","hoverRadius","line","tension","data","map","m","hour","datasets","label","fill","pointBackgroundColor","pointBorderColor","borderDash","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/scar/Downloads/cursor/src/components/MetricsChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n// @ts-ignore\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface HourlyMetric {\r\n  hour: string;\r\n  o2har: number;\r\n  unserviceability: number;\r\n  date: string;\r\n}\r\n\r\ninterface MetricsChartProps {\r\n  todayMetrics: HourlyMetric[];\r\n  yesterdayMetrics: HourlyMetric[];\r\n  sdlwMetrics: HourlyMetric[];\r\n  metricType: 'o2har' | 'unserviceability';\r\n}\r\n\r\nconst MetricsChart: React.FC<MetricsChartProps> = ({ todayMetrics, yesterdayMetrics, sdlwMetrics, metricType }) => {\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n        labels: {\r\n          color: '#ffffff',\r\n          padding: 20,\r\n          usePointStyle: true,\r\n          pointStyle: 'circle',\r\n          font: {\r\n            size: window.innerWidth < 768 ? 10 : 12,\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `${metricType.toUpperCase()}${metricType === 'o2har' ? ' (Mins)' : ' (%)'} - Hourly Trend`,\r\n        color: '#ffffff',\r\n        font: {\r\n          size: window.innerWidth < 768 ? 14 : 16,\r\n        },\r\n        padding: {\r\n          top: 10,\r\n          bottom: 20,\r\n        },\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(26, 26, 46, 0.95)',\r\n        titleColor: '#ffffff',\r\n        bodyColor: '#ffffff',\r\n        borderColor: '#2d2d44',\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n        titleFont: {\r\n          size: window.innerWidth < 768 ? 11 : 13,\r\n        },\r\n        bodyFont: {\r\n          size: window.innerWidth < 768 ? 10 : 12,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          color: '#ffffff',\r\n          font: {\r\n            size: window.innerWidth < 768 ? 10 : 12,\r\n          },\r\n          padding: 8,\r\n        },\r\n        border: {\r\n          color: 'rgba(255, 255, 255, 0.2)',\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.1)',\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          color: '#ffffff',\r\n          font: {\r\n            size: window.innerWidth < 768 ? 9 : 11,\r\n          },\r\n          padding: 8,\r\n          maxRotation: window.innerWidth < 768 ? 45 : 0,\r\n          minRotation: window.innerWidth < 768 ? 45 : 0,\r\n        },\r\n        border: {\r\n          color: 'rgba(255, 255, 255, 0.2)',\r\n        },\r\n      },\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: 'index' as const,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: window.innerWidth < 768 ? 3 : 4,\r\n        hoverRadius: window.innerWidth < 768 ? 5 : 6,\r\n        borderWidth: 2,\r\n      },\r\n      line: {\r\n        tension: 0.3,\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: todayMetrics.map(m => m.hour),\r\n    datasets: [\r\n      {\r\n        label: 'Today',\r\n        data: todayMetrics.map(m => m[metricType]),\r\n        borderColor: '#3b82f6',\r\n        backgroundColor: 'rgba(59, 130, 246, 0.2)',\r\n        borderWidth: 2,\r\n        fill: false,\r\n        pointBackgroundColor: '#3b82f6',\r\n        pointBorderColor: '#ffffff',\r\n      },\r\n      {\r\n        label: 'Yesterday',\r\n        data: yesterdayMetrics.map(m => m[metricType]),\r\n        borderColor: '#9ca3af',\r\n        backgroundColor: 'rgba(156, 163, 175, 0.2)',\r\n        borderWidth: 2,\r\n        borderDash: [5, 5],\r\n        fill: false,\r\n        pointBackgroundColor: '#9ca3af',\r\n        pointBorderColor: '#ffffff',\r\n      },\r\n      {\r\n        label: 'Same Day Last Week',\r\n        data: sdlwMetrics.map(m => m[metricType]),\r\n        borderColor: '#6b7280',\r\n        backgroundColor: 'rgba(107, 114, 128, 0.2)',\r\n        borderWidth: 2,\r\n        borderDash: [2, 2],\r\n        fill: false,\r\n        pointBackgroundColor: '#6b7280',\r\n        pointBorderColor: '#ffffff',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark-card border border-dark-border rounded-xl shadow-soft p-4 md:p-6\">\r\n      <div className=\"w-full h-64 md:h-80 lg:h-96\">\r\n        <Line options={options} data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricsChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}