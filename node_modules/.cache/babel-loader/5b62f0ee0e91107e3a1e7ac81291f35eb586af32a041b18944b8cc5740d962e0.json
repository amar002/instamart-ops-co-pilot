{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import CityCard from'../components/CityCard';import ChatBot from'../components/ChatBot';import DarkModeToggle from'../components/DarkModeToggle';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[pods,setPods]=useState([]);const[cities,setCities]=useState([]);const[loading,setLoading]=useState(true);const[chatOpen,setChatOpen]=useState(false);const navigate=useNavigate();useEffect(()=>{const fetchPods=async()=>{try{const response=await fetch('/data/pods.json');const data=await response.json();setPods(data);// Aggregate by city (latest date per pod)\nconst latestPods=[];const podMap=new Map();data.forEach(pod=>{const key=pod.pod_id;if(!podMap.has(key)||new Date(pod.date)>new Date(podMap.get(key).date)){podMap.set(key,pod);}});podMap.forEach(pod=>latestPods.push(pod));// Group by city\nconst cityMap=new Map();latestPods.forEach(pod=>{if(!cityMap.has(pod.city)){cityMap.set(pod.city,{city:pod.city,cityOwnerName:pod.city_owner_name,cityOwnerEmail:pod.city_owner_email,o2har:0,unserviceability:0,breachedPods:0,totalPods:0,lastUpdated:pod.date});}const city=cityMap.get(pod.city);city.o2har+=pod.o2har;city.unserviceability+=pod.unserviceability;city.totalPods+=1;if(pod.o2har>9.0||pod.unserviceability>5.0)city.breachedPods+=1;if(new Date(pod.date)>new Date(city.lastUpdated))city.lastUpdated=pod.date;});// Average metrics\ncityMap.forEach(city=>{city.o2har=city.o2har/city.totalPods;city.unserviceability=city.unserviceability/city.totalPods;});setCities(Array.from(cityMap.values()));}catch(error){console.error('Error fetching pods:',error);}finally{setLoading(false);}};fetchPods();},[]);const handleCityClick=city=>{navigate(`/city/${encodeURIComponent(city)}`);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-instamart-blue mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Loading cities...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto px-4 py-4 flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"Instamart Ops Co-Pilot\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"City Operations Overview\"})]}),/*#__PURE__*/_jsx(DarkModeToggle,{})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto px-4 py-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:cities.map(city=>/*#__PURE__*/_jsx(CityCard,{...city,onClick:()=>handleCityClick(city.city)},city.city))})}),/*#__PURE__*/_jsx(ChatBot,{isOpen:chatOpen,onToggle:()=>setChatOpen(!chatOpen)})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CityCard","ChatBot","DarkModeToggle","jsx","_jsx","jsxs","_jsxs","Dashboard","pods","setPods","cities","setCities","loading","setLoading","chatOpen","setChatOpen","navigate","fetchPods","response","fetch","data","json","latestPods","podMap","Map","forEach","pod","key","pod_id","has","Date","date","get","set","push","cityMap","city","cityOwnerName","city_owner_name","cityOwnerEmail","city_owner_email","o2har","unserviceability","breachedPods","totalPods","lastUpdated","Array","from","values","error","console","handleCityClick","encodeURIComponent","className","children","map","onClick","isOpen","onToggle"],"sources":["C:/Users/scar/Downloads/cursor/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PodData } from '../types';\r\nimport CityCard from '../components/CityCard';\r\nimport ChatBot from '../components/ChatBot';\r\nimport DarkModeToggle from '../components/DarkModeToggle';\r\n\r\ninterface CitySummary {\r\n  city: string;\r\n  cityOwnerName: string;\r\n  cityOwnerEmail: string;\r\n  o2har: number;\r\n  unserviceability: number;\r\n  breachedPods: number;\r\n  totalPods: number;\r\n  lastUpdated: string;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [pods, setPods] = useState<PodData[]>([]);\r\n  const [cities, setCities] = useState<CitySummary[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPods = async () => {\r\n      try {\r\n        const response = await fetch('/data/pods.json');\r\n        const data: PodData[] = await response.json();\r\n        setPods(data);\r\n        // Aggregate by city (latest date per pod)\r\n        const latestPods: PodData[] = [];\r\n        const podMap = new Map<string, PodData>();\r\n        data.forEach(pod => {\r\n          const key = pod.pod_id;\r\n          if (!podMap.has(key) || new Date(pod.date) > new Date(podMap.get(key)!.date)) {\r\n            podMap.set(key, pod);\r\n          }\r\n        });\r\n        podMap.forEach(pod => latestPods.push(pod));\r\n        // Group by city\r\n        const cityMap = new Map<string, CitySummary>();\r\n        latestPods.forEach(pod => {\r\n          if (!cityMap.has(pod.city)) {\r\n            cityMap.set(pod.city, {\r\n              city: pod.city,\r\n              cityOwnerName: pod.city_owner_name,\r\n              cityOwnerEmail: pod.city_owner_email,\r\n              o2har: 0,\r\n              unserviceability: 0,\r\n              breachedPods: 0,\r\n              totalPods: 0,\r\n              lastUpdated: pod.date,\r\n            });\r\n          }\r\n          const city = cityMap.get(pod.city)!;\r\n          city.o2har += pod.o2har;\r\n          city.unserviceability += pod.unserviceability;\r\n          city.totalPods += 1;\r\n          if (pod.o2har > 9.0 || pod.unserviceability > 5.0) city.breachedPods += 1;\r\n          if (new Date(pod.date) > new Date(city.lastUpdated)) city.lastUpdated = pod.date;\r\n        });\r\n        // Average metrics\r\n        cityMap.forEach(city => {\r\n          city.o2har = city.o2har / city.totalPods;\r\n          city.unserviceability = city.unserviceability / city.totalPods;\r\n        });\r\n        setCities(Array.from(cityMap.values()));\r\n      } catch (error) {\r\n        console.error('Error fetching pods:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPods();\r\n  }, []);\r\n\r\n  const handleCityClick = (city: string) => {\r\n    navigate(`/city/${encodeURIComponent(city)}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-instamart-blue mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading cities...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-4xl mx-auto px-4 py-4 flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Instamart Ops Co-Pilot</h1>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">City Operations Overview</p>\r\n          </div>\r\n          <DarkModeToggle />\r\n        </div>\r\n      </div>\r\n\r\n      {/* City Cards */}\r\n      <div className=\"max-w-4xl mx-auto px-4 py-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {cities.map(city => (\r\n            <CityCard\r\n              key={city.city}\r\n              {...city}\r\n              onClick={() => handleCityClick(city.city)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ChatBot */}\r\n      <ChatBot isOpen={chatOpen} onToggle={() => setChatOpen(!chatOpen)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}